/*
   C клавиатуры вводятся два целых числа. Первое число рассматри-
  вается как код цифры, а второе - как код прописной латинской буквы.
  Необходимо преобразовать букву по следующему правилу: получить новую
  букву, которая находится в алфавите от исходной на расстоянии,
  равном значению цифры. Преобразования выполняются  по "кольцу", т.е.
  при выходе за букву 'Z' в качестве новой буквы берется буква с начала
  алфавита. Если первое число не соответствуе цифре или второе не
  соответствует букве, или расстояние нулевое - преобразование не
  выполняется.
  Примеры:  49 65 - это  1 A: преобразование А ==> B
	        50 90 - это  2 Z: преобразование Z ==> B
	        51 91 - это  3 [: преобразования нет
 */
using System;
class Operator
{
 public static void Main()
  {  
	 int    cifra,      //Первое число (код цифры)
	        bukva,      //Второе число (код прописной буквы)
	        delta,      //Величина сдвига в алфавите
	        newbuk;     //Код новой буквы    
	 string  rep;        //Признак повторного выполнения
	 string str;        //Строка для приема данных и вывода данных
		    
	 REPEAT:
	 Console.Write("Введите первый код(цифры):  "); 
	 str = Console.ReadLine();
	 cifra= int.Parse(str); 	
	 Console.Write("Введите второй код(буквы):  "); 
	 str = Console.ReadLine();
	 bukva= int.Parse(str); 	
	 
	 newbuk = bukva;
	 if(cifra >= '0' && cifra <= '9')
	   {
		 delta = cifra - '0';
		 if(bukva >= 'A' && bukva <= 'Z')
		   {
			 newbuk = bukva + delta;
			 if(newbuk > 'Z')
				 newbuk = 'A' + (newbuk - 'Z' - 1);
		   }
	   }

	 if(newbuk == bukva)
	    str = "Преобразования не было";
	 else
	    str = string.Format("{0} ---> {1}", (char)bukva, (char)newbuk);
	 Console.WriteLine(str);
	 
	 Console.Write("Для повтора вычислений намите клавишу Y: ");
	 rep = Console.ReadLine();  
	 Console.WriteLine();
	 if(rep == "Y" || rep == "y") goto REPEAT;
  } //Конец определения метода
} //Конец объявления класса
