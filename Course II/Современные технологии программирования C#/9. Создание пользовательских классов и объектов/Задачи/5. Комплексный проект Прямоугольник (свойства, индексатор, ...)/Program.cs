using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    struct MyPoint
    {
        public int x, y;		 // координаты верхнего левого угла
        public MyPoint(int _x, int _y)  // конструктор.
        {
            x = _x; y = _y;
        }
    }


    //===============================================================
    class Прямоугольник
    {
        public static int count = 0;	//количество объектов

        private MyPoint p1;		 // координаты верхнего левого угла
        private MyPoint p2;		 // координаты нижнего правого угла
        private int w;		     // ширина
        private int h;		     // высота




        //-----------------------------------------------------------------------------------
        public Прямоугольник(MyPoint _p1, MyPoint _p2)  // конструктор 1.
        {
            count++;

            p1 = _p1;
            p2 = _p2;

            w = p2.x - p1.x; h = p2.y - p1.y;
            Test1();
        }

        //-----------------------------------------------------------------------------------
        public Прямоугольник(MyPoint _p1, int _w, int _h)     // конструктор 2.
        {
            count = count + 1;
            p1 = _p1;
            w = _w;   h = _h;
            p2 = new MyPoint(p1.x + w, p1.y + h);

            Test1(); 
        }




        //-----------------------------------------------------------------------------------
        private void Test1()           // Внутренний метод private
        {
            if (p2.x < p1.x | p2.y < p1.y | h < 0 | w < 0)
                throw (new Exception("Прямоугольник " + count + ": параметры конструктора имеют противоречивые значения. Создайте объект заново!"));
        }


        //-----------------------------------------------------------------------------------
        public int H                  // Свойство
        {
            get { return h; }
            set { h = value; Test2();  p2.y = p2.y + h; }
        }


        //-----------------------------------------------------------------------------------
        public int W                 // Свойство
        {
            get { return w; }
            set { w = value; Test2(); p2.x = p1.x + w; }
        }


        //-----------------------------------------------------------------------------------
        public MyPoint P2                 // Свойство
        {
            get { return P2; }
            set { p2 = value; Test2(); w = p2.x - p1.x; h = p2.y - p1.y; }
        }



        //-----------------------------------------------------------------------------------
        public MyPoint P1                 // Свойство
        {
            get { return p1; }
            // set { p1 = value; Test(); }  Запрет на изменение начальной точки!!!
        }

        //-----------------------------------------------------------------------------------
        private void Test2()            // Внутренний метод private
        {
            if (p2.x < p1.x | p2.y < p1.y | h < 0 | w < 0)
                throw (new Exception("Прямоугольник " + count + ": заданный параметр ошибочен. Укажите правильное значение!"));
        }


        //-----------------------------------------------------------------------------------
        public string Show()        // Метод
        {
            return string.Format("Прямоугольник {0}: координаты ({1},{2}), ({3},{4}); W = {5}, H = {6}",
                                 count, p1.x, p1.y, p2.x, p2.y, w, h);
        }



        //-----------------------------------------------------------------------------------
        public int Square()       // Метод
        {
            return w * h;
        }



        //-----------------------------------------------------------------------------------
        public int Периметр()       // Метод
        {
            return 2 * (w + h);
        }


        // Индексатор
        //-----------------------------------------------------------------------------------
        public int this[int i]                 
        {
            get
            {
                switch (i)
                {
                    case 0: return p1.x;
                    case 1: return p1.y;
                    case 2: return p2.x;
                    case 3: return p2.y;
                    default:
                        throw (new Exception("Прямоугольник " + count + ": неправильный индекс!"));
                }
            }
        }


    }

    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    class Program
    {
        static void Main(string[] args)
        {
            Прямоугольник прямоугольник1;
            прямоугольник1 = new Прямоугольник(new MyPoint(10, 5), new MyPoint(40, 30));

            Прямоугольник квадрат1 = new Прямоугольник(new MyPoint(40, 20), 30, 30);

            int sПр, sКв, p;
            sПр = прямоугольник1.Square();
            Console.WriteLine("Площадь прямоугольника = " + sПр);

            sКв = квадрат1.Square();
            Console.WriteLine("Площадь квадрата = " + sКв);

            p = квадрат1.Периметр();
            Console.WriteLine("Периметр квадрата = " + p);

            прямоугольник1.P2 = new MyPoint(15, 10);
            прямоугольник1.W = 80;


            Console.WriteLine(прямоугольник1.Show());
            Console.WriteLine(квадрат1.Show());

            // Используем индексатор
            Console.WriteLine("Начальные координаты прямоугольника: ({0}, {1})",
                прямоугольник1[0], прямоугольник1[1]);


            // Используем статическое поле
            Console.WriteLine("Создано " + Прямоугольник.count + " прямоугольника");

            // Вносим ошибку
            Прямоугольник прямоугольник2 = null;
            try
            {
                прямоугольник2 = new Прямоугольник(new MyPoint(80, 90), new MyPoint(40, 30));
                Console.WriteLine(прямоугольник2.Show());
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }

        }
    }
}
