/*
 ПРАКТИЧЕСКОЕ ЗАНЯТИЕ 9. ЗАДАЧА 1.2
 Сформировать целочисленную матрицу A(NxM). Размеры матрицы ввести
 с клавиатуры. 
 Правила формирования:
  1. Строка с четным номером содержит номера столбцов
  2. Строка с нечетным номером содержит номера столбцов в обратной
     последовательности
 Номера отсчитываются от нуля. Номер 0 - четный
 Сформированную матрицу вывести на экран построчно
 Пример: Размер матрицы 3x4
	 Сформированная матрица
	 0 1 2 3
	 3 2 1 0
	 0 1 2 3 
*/
using System;
class Operator
{
 public static void Main()
  {    
	int[,] a;      //Ссылка на формируемую матрицу
    int    n,      //Количество строк
		   m,      //Количество столбцов
		   i,      //Номер строки
           j,	   //Номер столбца
	       rewj;   //Перевернутый номер столбца
	char   rep;    //Признак повторного выполнения
    string strin,  //Строка для приема данных
		   strout; //Строка для вывода данных
	do
	 { 
       Console.Write("Строк:    ");
       strin = Console.ReadLine();
	   n = int.Parse(strin);
	   Console.Write("Столбцов: ");
	   strin = Console.ReadLine();
	   m = int.Parse(strin);
	
	   a = new int[n,m];
	   for(i=0; i<n; i+=2)  //Перебираем все четные строки
		for(j=0; j<m; j++)  //Для i-ой строки перебираем все столбцы
		  a[i,j] = j;

	   for(i=1; i<n; i+=2)  //Перебираем все нечетные строки
		for(j=0,rewj=m-1; j<m; j++,rewj--)  //Для i-ой строки перебираем столбцы
		  a[i,j] = rewj;
		
	   strout = "Матрица";
	   Console.WriteLine(strout);
	   for(i=0; i<n; i++,Console.WriteLine())
		 for(j=0; j<m; j++)
		   {
			 strout = string.Format("{0,4}",a[i,j]);
			 Console.Write(strout);
		   }
	   
	   Console.Write("\nДля повтора вычислений намите клавишу Y: ");
	   rep = char.Parse(Console.ReadLine());  
	   Console.WriteLine();
	 }while(rep == 'Y' || rep == 'y');
  } //Конец определения метода
} //Конец объявления класса
