/*
  Дана квадратная целочисленная матрица размером NxN элементов. Размер
  матрицы вводится с клавиатуры (N не больше 15). Сформировать массив,
  содержащий сумму элементов главной диагонали и диагоналей ниже главной.
  Сформированый массив вывести на экран так, чтобы сумма распологалась
  ниже последнего элемента диагонали.
  Матрица заполняется случайными числами в диапазоне от -50 до +50
  Пример:  Матрица  ->    1   2   3   4
			              5   6   7   8
			              9  10  11  12
			             13  14  15  16
 
	   Суммы    ->       13  23  30  34
*/

using System;
class Operator
{
	public static void Main()
	{
		int    n,        //Количество строк
			   nd,       //Номер диагонали (совпадает с номером строки)
		       MIN=-50,  //Левая граница диапазона
               MAX=+50;   //Правая граница диапазона
		int[,] a;        //Ссылка на формируемую матрицу
		int[]  s;        //Ссылка на массив сумм
		int    i,        //Номер строки
			   j;	     //Номер столбца
		char   rep;      //Признак повторного выполнения
		string str;      //Строка для вывода и ввода данных

		Random ran = new Random(); //Объект - генератор чисел

		do
		{
			Console.Write("Число строк:  "); 
			str = Console.ReadLine();
			n = int.Parse(str); 	
			
			a = new int[n,n];
            s = new int[n];
			for(i=0; i<n; i++)
				for(j=0; j<n; j++)
				  a[i,j] = ran.Next(MIN,MAX+1);

			//Вычисление сумм диагоналей
			for(nd=0; nd<n; nd++)
				for(s[nd]=0,i=nd,j=0; i<n; i++,j++)
					s[nd] += a[i,j];
			
			for(i=0; i<n; i++,Console.WriteLine())
				for(j=0; j<n; j++)
				{
					str = string.Format("{0,4}",a[i,j]);
					Console.Write(str);
				}
			for(nd=n-1; nd>=0; nd--)
			   {
				 str = string.Format("{0,4}",s[nd]);
				 Console.Write(str);
			   }
			Console.Write("\nДля повтора вычислений намите клавишу Y: ");
			rep = char.Parse(Console.ReadLine());  
			Console.WriteLine();
		}while(rep == 'Y' || rep == 'y');
	} //Конец определения метода
} //Конец объявления класса


